package bsw07

import (
	"github.com/Nik-U/pbc"
)

func loadParams(param, gStr string) (*Pairing, *G, error) {
	pairing, err := pbc.NewPairingFromString(param)
	if err != nil {
		return nil, nil, err
	}

	g, ok := pairing.NewG1().SetString(gStr, 10)
	if !ok {
		return nil, nil, ErrInvalidG
	}

	return &Pairing{pairing}, &Element{"G", g}, nil
}

const (
	_paramString = `type a
q 7361454615712206366414680387812763844302912468233360479360305425045838366346529653524590910079467563594319528252006151960399568673282914259959674397290923
h 10073823289251150806583276572737579091785140012637349913689991796215894446829853444504299838585379829026388
r 730750818665534535851578973600197997769233793023
exp2 159
exp1 116
sign1 1
sign0 -1
`
	_g = `[4069806649734603125310111676781910232872142442215377693365920673995208321968107923012599663808784563824405891168668893734257095950679038254963759819307777, 5457474164765884300821783200315382454139103978491681075003332329514568785384752148302281115970667169244584401979361612350157304456771119353805625065765864]`
)

var (
	pairing, g, _ = loadParams(_paramString, _g)

	zero = pairing.P.NewZr().Set0()
	e    = pairing.P.NewGT().Pair(g.E, g.E) // e(g, g) to reduce redundant calculation
)
